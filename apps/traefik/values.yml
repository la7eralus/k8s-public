image:
  registry: docker.io
  repository: traefik
  tag: v3.0

metrics:
  prometheus: null
  
service:
  spec:
    externalTrafficPolicy: Local
    loadBalancerIP: "192.168.4.11"

ports:
  stl:
    port: 22000
    expose: true
    exposedPort: 22000
    protocol: TCP
  web:
    redirectTo:
      port: websecure
  websecure:
    asDefault: true
  traefik: null
  metrics: null

deployment:
  healthchecksPort: 8000
  revisionHistoryLimit: 1
  
globalArguments:
  - "--global.sendanonymoususage=false"

additionalArguments:
  - "--serversTransport.insecureSkipVerify=true"
  - "--ping.entrypoint=web"
  
env:
  - name: TZ
    value: Europe/Berlin

logs:
  general:
    level: INFO
    
ingressRoute:
  dashboard:
    entryPoints: ["websecure"]
    matchRule: Host(`traefik.s3rv.dev`)

tlsStore:
  default:
    defaultCertificate:
      secretName: le-default

providers:
  kubernetesIngress:
    ingressClass: traefik-internal
    publishedService:
      enabled: true
  file:
    enabled: true
    watch: true
    content: |-
      http:
        routers:
          proxmox-alpha:
            service: proxmox-alpha
            rule: Host(`proxmox-alpha.s3rv.dev`)
          proxmox-beta:
            service: proxmox-beta
            rule: Host(`proxmox-beta.s3rv.dev`)
          haos:
            service: haos
            rule: Host(`haos.s3rv.dev`)
          synology:
            service: nasa2
            rule: Host(`nasa2.s3rv.dev`)
          scrypted:
            service: scrypted
            rule: Host(`scrypted.s3rv.dev`)
          uptime-kuma:
            service: uptime-kuma
            rule: Host(`uptime.s3rv.dev`)
          unicorn-pi:
            service: unicorn-pi
            rule: Host(`unicorn-pi.s3rv.dev`)
          adguard-home:
            service: adguard-home
            rule: Host(`adguard.s3rv.dev`)
          calibre-web:
            service: calibre-web
            rule: Host(`calibre.s3rv.dev`)
        services:
          proxmox-alpha:
            loadBalancer:
              servers:
              - url: https://192.168.4.55:8006/
          proxmox-beta:
            loadBalancer:
              servers:
              - url: https://192.168.4.44:8006/
          nasa2:
            loadBalancer:
              servers:
              - url: http://192.168.4.33:5000/
          haos:
            loadBalancer:
              servers:
              - url: http://192.168.4.22:8123/
          scrypted:
            loadBalancer:
              servers:
              - url: https://192.168.4.104:10443/
          uptime-kuma:
            loadBalancer:
              servers:
              - url: http://192.168.4.33:3001/
          unicorn-pi:
            loadBalancer:
              servers:
              - url: http://192.168.4.80:80/
          adguard-home:
            loadBalancer:
              servers:
              - url: http://192.168.4.10:8080/
          calibre-web:
            loadBalancer:
              servers:
              - url: http://192.168.4.33:8083/

extraObjects: 
  - apiVersion: bitnami.com/v1alpha1
    kind: SealedSecret
    metadata:
      creationTimestamp: null
      name: cloudflare-api-token
    spec:
      encryptedData:
        api-token: AgBgW9R4gPAs6vIbxaR73ctKwR4O7fAr7N80aL16lo+jCNd5VzsAQtG3/8r4tzTM98SwvK5L7DBIzEzglfzMANhhef1LNQ0UUiAxHXOD3/00UxhFdCE6r8Z1C6JSPsu26Hd59koLLNCWTCWzShjVo4lAVmEuQDqZlby0taVpw+8pYpVVwcb4OvbQ2Sx1SY2TZH3AOOKBBhEZ0zbp9Vxz+Uolg6EesJMj2Q5/Wk8y+tYBKLjQVElKW7cg/gfhIhI98Clv1QJyYtOhGcUSDzdWa09tdxFL65NnVYJ1+a5PFTxcQ/75SM1kmdnXAmhMgX3tSqxjlrFIVCIfMvLlAO5NX/6ciyyhKMXSxPaAGZcvX7BuvN/aUB+j9uvZoM27qOBuivundWl+j32o2oW1cdTsT3CSb4jn27KBO9sruRsm7wWrBaLDVZyS3Ou3+/klTNCZzAX+VcLrIlObMC054R/hMGSI+R7CATtEycTxEK6cES1J23zx0I4de8upBV6RIAwX5zjd+eEjw+nSV7vWa75exvgXTbHnT0QvDlr9K0wNpAa+SytmubWnSVs1/o7tJCk3wKOIkmMUDsO+nRnHClMe23onFXIrqVuNjoPosQVUejn92LvGIhs39Ue0je24k4qGGx5LrAXX8eL+TS5j3rF5xgkVBaCoyQeKlqVi2N8ijNhvNOEJ/q5CL6nwqsAJkYRTxYLZ+he02hwtKXSI37OwJaOjvxXNuHxFZpyjR249RMp9OBz4yqqmCpfv
      template:
        metadata:
          creationTimestamp: null
          name: cloudflare-api-token
          namespace: traefik
        type: Opaque
  - apiVersion: cert-manager.io/v1
    kind: Issuer
    metadata:
      name: le-dns-issuer
    spec:
      acme:
        email: fach_limousinen0i@icloud.com
        server: https://acme-v02.api.letsencrypt.org/directory
        privateKeySecretRef:
          name: le-dns
        solvers:
          - selector: {}
            dns01:
              cloudflare:
                apiTokenSecretRef:
                  name: cloudflare-api-token
                  key: api-token
  - apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      name: s3rv-dev
    spec:
      secretName: le-default
      issuerRef:
        name: le-dns-issuer
      dnsNames:
        - '*.s3rv.dev'
        - s3rv.dev
  - apiVersion: traefik.io/v1alpha1
    kind: IngressRoute
    metadata:
      name: argocd
      namespace: argocd
      annotations:
        helm.sh/hook: post-install
    spec:
      routes:
        - match: Host(`argocd.s3rv.dev`)
          kind: Rule
          services:
            - name: argocd-server
              port: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: wallos
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/instance: wallos
      app.kubernetes.io/name: wallos
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: wallos
        app.kubernetes.io/name: wallos
    spec:
      containers:
        - image: bellamy/wallos:latest
          name: wallos
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          volumeMounts:
            - mountPath: /var/www/html/db
              name: db
          startupProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: http
            periodSeconds: 60
            timeoutSeconds: 1
      restartPolicy: Always
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: db
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: wallos
spec:
  ports:
    - name: http
      port: 80
      targetPort: http
  type: ClusterIP
  selector:
    app.kubernetes.io/instance: wallos
    app.kubernetes.io/name: wallos
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: wallos
spec:
  routes:
    - match: Host(`wallos.s3rv.dev`)
      kind: Rule
      services:
        - name: wallos
          port: http
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  name: db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-static
  volumeName: wallos-db